<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>levelGrid = ds_grid_create( 90 , 45 )
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var c , i , j , mod3;

for( i = 0 ; i &lt; 90  ; i += 1 )
{
    for( j = 0 ; j &lt; 44 ; j += 1 )
    {/*
        var c1, c2, c3;
        mod3 = ( i - j ) % 3;
        
        if ( mod3 &lt; 0 )
        {
            mod3 += 3
        }
        
        if ( mod3 == 0 )
        {
            continue;
        }
        else */if ( ( i + j ) % 2 == 1  )
        {/*
            c1 = TransformTriangleToSquare( i - 1 , j );
            c2 = TransformTriangleToSquare( i , j + 1 );
            c3 = TransformTriangleToSquare( i + 1 , j - 1 );*/
            draw_sprite(sprite0,1, triangleBase * i , j * triangleHeight + 14)
            
        }
        else
        {/*
            c1 = TransformTriangleToSquare( i + 1 , j );
            c2 = TransformTriangleToSquare( i - 1 , j + 1 );
            c3 = TransformTriangleToSquare( i , j - 1 );*/
            
            draw_sprite(sprite0,0, triangleBase * i , j * triangleHeight + 14)
        }/*
        draw_set_colour( c_red )
        draw_triangle( c1[0] , c1[1] , c2[0] , c2[1] , c3[0] , c3[1] , false )
            draw_set_colour( c_black )
        draw_triangle( c1[0] , c1[1] , c2[0] , c2[1] , c3[0] , c3[1] , true )*/
    }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
